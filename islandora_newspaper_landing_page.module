<?php
/**
 * @file
 * Hooks and callbacks for this module.
 */

function islandora_newspaper_landing_page_menu() {
  $items = array();
  $items['islandora/object/%islandora_object/newspaper_about'] = array(
    'weight' => -3,
    'title' => 'About',
    'page callback' => 'islandora_newspaper_landing_page_view',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_newspaper_landing_page_access',
    'access arguments' => array(2),
  );
  $items['admin/islandora/landing_page'] = array(
    'title' => 'Newspaper Landing Page',
    'description' => 'Configure the Newspaper Landing Page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_newspaper_landing_page_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'islandora_newspaper_landing_page.admin.inc',
    //'type' => MENU_LOCAL_TASK,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Determines whether or not to show this modules tab.
 *
 * @global object $user
 * @param FedoraObject $fedora_object
 * @return boolean
 */
function islandora_newspaper_landing_page_access($fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }

  $models = $fedora_object->models;

  // Show tab if MODS datastream exists and has newspaperCModel relationship.
  if (isset($fedora_object['MODS']) AND in_array("islandora:newspaperCModel", $models, TRUE)) {
    return TRUE;
  }

  return FALSE;
}

/**
 * Theme registry function.
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function islandora_newspaper_landing_page_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_newspaper_landing_page_view' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora-newspaper-landing-page',
      'variables' => array('islandora_objects' => NULL),
    ),
  );
}

/**
 * The newspaper landing page view.
 *
 * @param FedoraObject $object
 * @return string
 */
function islandora_newspaper_landing_page_view($object) {
  $output = theme('islandora_newspaper_landing_page_view', array('islandora_object' => $object));
  return $output;
}

/**
 * Implements hook_block_info().
 */
function islandora_newspaper_landing_page_block_info() {

  $blocks['history'] = array(
    'info' => t('This Day in History'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['social'] = array(
    'info' => t('Social Media'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function islandora_newspaper_landing_page_block_view($delta = '') {
  global $base_url;
  $block = array();
  date_default_timezone_set('America/Halifax');

  switch ($delta) {
    case 'history':

      $interval[1] = "100 years";
      $interval[2] = "75 years";
      $interval[3] = "50 years";

      foreach($interval as $years) {
        $history_date = islandora_newspaper_landing_page_get_date_formats($years);
        $solr_results = islandora_newspaper_landing_page_get_past_issue($history_date['time']);

        if($solr_results['response']['docs'])
          break;
      }

      $block['subject'] = t('This Day in History');

      if ($solr_results['response']['docs']) {

        // Choose random result if more than 1 newspaper have issues for this day.
        $random_pick = array_rand($solr_results['response']['docs']);
        $new_pid = $solr_results['response']['docs'][$random_pick]['PID'];
        $title = $solr_results['response']['docs'][$random_pick]['mods_titleInfo_nonSort_ms'][0] . " " . $solr_results['response']['docs'][0]['mods_titleInfo_title_ms'][0];
        $object = islandora_object_load($new_pid);

        if($object) {
          $path =  $base_url . "/islandora/object/$new_pid";
          if (isset($object['TN'])) {
            $thumb = $base_url . "/islandora/object/$new_pid/datastream/TN";

            $block['content'] =
              "<div class=\"block-body\">
                <a href = \"$path\"><img src = \"$thumb\"><br/>$title</a><br/>" . $history_date['full'] .
              "</div>";
          }
          else {
            $block['content'] = "<div class=\"block-body\"><a href = \"$path\">$title</a><br/>" . $history_date['full'] . "</div>";
          }
        }
      }
      else
        $block['content'] = "<div class = \"block-body\">No newspaper issues published on this date 100, 75 or 50 years ago.</div>";

      // Add social media images
      $image_dir = $base_url . '/' . drupal_get_path('module', 'islandora_newspaper_landing_page') . '/images/';

      $block['content'] .=
        "<div class=\"social-icons\">
          <a href=\"http://peinewspapers.tumblr.com/\"><img src=$image_dir" . 'tumblr.png' . " /></a>
          <a href=\"https://twitter.com/peinewspapers\"><img src=$image_dir" . 'twitter.png' . " /></a>
          <a href=\"https://www.facebook.com/dailynewspaperpei\"><img src=$image_dir" . 'facebook.png' . " /></a>
        </div>";

      break;

    case "social":

      $block['subject'] = t('Social Media');

      // Add social media images
      $image_dir = $base_url . '/' . drupal_get_path('module', 'islandora_newspaper_landing_page') . '/images/';

      $block['content'] =
        "<div class=\"social-icons\">
          <a href=\"http://peinewspapers.tumblr.com/\"><img src=$image_dir" . 'tumblr.png' . " /></a>
          <a href=\"https://twitter.com/peinewspapers\"><img src=$image_dir" . 'twitter.png' . " /></a>
          <a href=\"https://www.facebook.com/dailynewspaperpei\"><img src=$image_dir" . 'facebook.png' . " /></a>
        </div>";

    break;
  }
  return $block;
}

/**
 * Function to set various date formats for the Day in History block.
 *
 * @param string $interval
 *  Time interval to look back (e.g. "100 years", "50 years")
 * @return array $history_date
 */
function islandora_newspaper_landing_page_get_date_formats($interval) {

  // Get date formats.
  $date = date_create(date('d-m-Y'));
  $temp_date = date_format(date_sub($date, date_interval_create_from_date_string($interval)), "Y-m-d");
  $history_date['full'] = date_format($date, "F d, Y");
  $history_date['time'] = $temp_date . "T00:00:00Z";

  return $history_date;
}

/**
 * Function to query for and return a past newspaper issue.
 *
 * @param string $history_date_time
 *  A date and time in format: 2014-02-10T00:00:00Z
 * @return array $solr_results
 */
function islandora_newspaper_landing_page_get_past_issue($history_date_time) {

  // Solr query.
  $solr_handler = variable_get('islandora_solr_request_handler', FALSE);
  $namespaces_enforced = variable_get('islandora_namespace_restriction_enforced', FALSE);
  $path_parts = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
  $solr = new Apache_Solr_Service($path_parts['host'], $path_parts['port'], $path_parts['path'] . '/');
  $solr->setCreateDocuments(0);
  $cmodel = $solr->escape('islandora:newspaperIssueCModel');
  $history_date_time = $solr->escape($history_date_time);
  $solr_query = "content_model_ms:$cmodel AND mods_originInfo_dateIssued_dt:$history_date_time";
  $solr_params = array();
  $solr_params['fl'][] = "PID, mods_originInfo_dateIssued_dt, mods_titleInfo_nonSort_ms, mods_titleInfo_title_ms";
  $solr_params['sort'] = array('mods_originInfo_dateIssued_dt' . ' asc');

  if ($solr_handler) {
    $solr_params['qt'] = $solr_handler;
  }

  if ($namespaces_enforced) {
    $namespace_list = trim(variable_get('islandora_pids_allowed', ''));
    if ($namespace_list) {
      $namespaces = preg_split('/[,|\s]/', $namespace_list);
      $namespace_array = array();
      foreach (array_filter($namespaces) as $namespace) {
        $namespace_array[] = 'PID:' . Apache_Solr_Service::escape($namespace) . '*';
      }
      $solr_params['fq'][] = implode(' OR ', $namespace_array);
    }
  }

  try {
    $start = 0;
    $max_results = 5;
    $method = 'GET';
    $results = $solr->search($solr_query, $start, $max_results, $solr_params, $method);
  }
  catch (Exception $e) {
    watchdog('islandora_newspaper_landing_page', 'Error getting solr results %e',
      array('%e' => $e->getMessage()));
  }

  $solr_results = NULL;
  if (!empty($results)) {
    $solr_results = json_decode($results->getRawResponse(), TRUE);
  }

  return $solr_results;
}

